// Creating the data pipeline
pipeline sajiasGDPPipeline {

    sajiasGDPExtractor
        -> sajiasXLSXInterpreter
        -> sajiasSheetPicker
        -> sajiasCellRangeSelector
        -> sajiasCellWriter;

     sajiasCellWriter   
        -> sajiasBondIssuanceTableInterpreter
        -> sajiasBondIssuanceLoader;

    sajiasCellWriter
        -> sajiasGDPperCapitaTableInterpreter
        -> sajiasGDPperCapitaLoader;

// Downloading the Excel file
    block sajiasGDPExtractor oftype HttpExtractor {
    url: "https://thedocs.worldbank.org/en/doc/7d852628d96b9411d43e5d36d5dff941-0050062022/original/Graphs-Chapter-5-02082022.xlsx";
}

// Extract XLSX file
    block sajiasXLSXInterpreter oftype XLSXInterpreter { 
        }

// Extracting the sheet from Figure S5.1.2 from the excel file
    block sajiasSheetPicker oftype SheetPicker {
        sheetName: "Figure S5.1.2";
    }

// Keeping the Table with Actual Data from Cell P2 to S45
    block sajiasCellRangeSelector oftype CellRangeSelector {
        select: range P2:S45;
    }

// Renaming the Column Names
    block sajiasCellWriter oftype CellWriter {
        at: range A1:D1;
        write: ["Country Code", "Economy", "GDP per Capita", "Bond Issuance Share"];
    }

 // Two separate table interpreters as we have to write into two separate tables
     block sajiasGDPperCapitaTableInterpreter oftype TableInterpreter {
        header: true;
        columns: [
        "Country Code" oftype CountryCodeAlpha3,
        "GDP per Capita" oftype GDPType,
        ];
    }
    block sajiasBondIssuanceTableInterpreter oftype TableInterpreter {
        header: true;
        columns: [
        "Country Code" oftype CountryCodeAlpha3,
        "Bond Issuance Share" oftype BondIssuanceShare
        ];
    }

    valuetype GDPType oftype decimal{
        constraints: [GDPperCapital];
    }

    constraint GDPperCapital oftype RangeConstraint {
        lowerBound: 0;
        lowerBoundInclusive: false;
    }

    valuetype BondIssuanceShare oftype decimal{
        constraints: [OneScale];
    }

    constraint OneScale oftype RangeConstraint{
        lowerBound: 0;
       // lowerBoundInclusive: true;
        upperBound: 1;
       // upperBoundInclusive: true;
    }
    
// Sinks to write output (into same database)
    block sajiasBondIssuanceLoader oftype SQLiteLoader {
        table: "bondIssuance";
        file: "country-stats.sqlite";
    }

    block sajiasGDPperCapitaLoader oftype SQLiteLoader {
        table: "gdpPerCapita";
        file: "country-stats.sqlite";
    }
}